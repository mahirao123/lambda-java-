package com.springboot.scm.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import com.springboot.scm.entitis.User;
import com.springboot.scm.forms.UserForm;
import com.springboot.scm.helpers.Message;
import com.springboot.scm.helpers.MessageType;
import com.springboot.scm.services.UserService;

import jakarta.servlet.http.HttpSession;
import jakarta.validation.Valid;


@Controller
public class PageController {

	@Autowired
	private UserService userService;
	
	@GetMapping("/")
	public String index() {
		
		return "redirect:/home";
		
	}
	
@RequestMapping("/home")
public String homePage(Model model) {
	model.addAttribute("title", "Home");
	
	return"home";
}
@RequestMapping("/about")
public String aboutPage() {
	
	
	return"about";
}
@RequestMapping("/services")
public String servicePage() {
	
	
	return"services";
}

@RequestMapping("/contact")
public String contactPage() {
	
	
	return"contact";
}

@GetMapping("/login")
public String loginPage() {
	
	
	return"login";
}

@GetMapping("/signup")
public String registertPage(Model model) {
	UserForm userForm = new UserForm();
//	userForm.setName("raj");
	model.addAttribute("userForm",userForm);
	
	return"register";
}

@RequestMapping(value="/do-register", method=RequestMethod.POST)
public String processRegister(@Valid @ModelAttribute UserForm userForm,BindingResult rBindingResult,HttpSession session,Model model) {
//	System.out.println(userForm);
	
	
	//Valid
	if(rBindingResult.hasErrors()) {
		
//		Message message=Message.builder().content("You have registerd already").type(MessageType.red).build();
//		session.setAttribute("message",message);
		return "register";
	}
	
	
	// Save User in database
	
	//user service
	// userForm data to User
//	User user=User.builder()
//			.name(userForm.getName())
//			.email(userForm.getEmail())
//			.password(userForm.getPassword())
//			.about(userForm.getAbout())
//			.phoneNumber(userForm.getPhoneNumber())
//			.profilePic("https://media.licdn.com/dms/image/v2/D5603AQGPEexj7QySBA/profile-displayphoto-scale_400_400/B56ZfJ.34VGQAg-/0/1751440393220?e=1757548800&v=beta&t=PMwLzZHo1lmGBoy619n9P6mOVvDU50GtukryC8Bco44")
//			.build();
	
//	or
	
    // 2. First check if email already exists (using form email, not user object)
    if (userService.isUserExistByEmail(userForm.getEmail())) {
        model.addAttribute("error", "This email is already registered: ");
        return "register"; // return same page with error
    }
	
	User user=new User();

	user.setName(userForm.getName());
	user.setEmail(userForm.getEmail());
	user.setPassword(userForm.getPassword());
	user.setPhoneNumber(userForm.getPhoneNumber());
	user.setAbout(userForm.getAbout());
	user.setProfilePic("https://media.licdn.com/dms/image/v2/D5603AQGPEexj7QySBA/profile-displayphoto-scale_400_400/B56ZfJ.34VGQAg-/0/1751440393220?e=1757548800&v=beta&t=PMwLzZHo1lmGBoy619n9P6mOVvDU50GtukryC8Bco44");
	User savedUser=userService.saveUser(user);
	System.out.println(savedUser);
	
	Message message=Message.builder().content("Registration Successful").type(MessageType.green).build();
	session.setAttribute("message",message);
	return "redirect:/signup";
}
}
